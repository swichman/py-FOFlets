#!/usr/bin/env python3

import numpy as np
import scipy.signal as sp
from pyFOFlet import FOFlet
import matplotlib.pyplot as plt

from scipy.io.wavfile import write

from PyQt5 import QtGui, QtCore, QtWidgets, uic
import sys

#############################################
# User Functions
#############################################
def foflet_str(_foflet1, _foflet2, _foflet3, _foflet4, _foflet5):
    pr_str = '''\n\n
====================================================
| FOFlet_1 || Fc: %7d  k1: %7.5f  BW: %7d
====================================================
| FOFlet_2 || Fc: %7d  k1: %7.5f  BW: %7d
====================================================
| FOFlet_3 || Fc: %7d  k1: %7.5f  BW: %7d
====================================================
| FOFlet_4 || Fc: %7d  k1: %7.5f  BW: %7d
====================================================
| FOFlet_5 || Fc: %7d  k1: %7.5f  BW: %7d
====================================================\n\n
''' % (_foflet1.Fc, _foflet1.k1, _foflet1.BW,
       _foflet2.Fc, _foflet2.k1, _foflet2.BW,
       _foflet3.Fc, _foflet3.k1, _foflet3.BW,
       _foflet4.Fc, _foflet4.k1, _foflet4.BW,
       _foflet5.Fc, _foflet5.k1, _foflet5.BW     )
    return pr_str

#############################################
#
# Declare the 5 foflets for the application
# globally so that all aspects of class and
# main can reach them
#
#############################################
Fs = 44100
foflet1 = FOFlet.FOFlet()
foflet2 = FOFlet.FOFlet()
foflet3 = FOFlet.FOFlet()
foflet4 = FOFlet.FOFlet()
foflet5 = FOFlet.FOFlet()


#############################################
# QT Stuff
#############################################
class Ui(QtWidgets.QMainWindow):
    # Init the class, build the connections, etc
    def __init__(self):
        super(Ui, self).__init__()
        # load UI file
        uic.loadUi('./ui/MainWindow.ui', self)
        # create timer
        self.timeout = int(1000/self.Impulse_Slider.value())
        self.timer = QtCore.QTimer(self)

        self.timer.timeout.connect(self.generateFOFlets)
        self.timer.start(self.timeout)
        self.show()



    # Do this at each new impulse
    def generateFOFlets(self):
        # reset impulse timer for next impulse
        self.timeout = int(1000/self.Impulse_Slider.value())
        self.timer.start(self.timeout)

        # capture all of the foflet Parameters
        foflet1.set_Fc(self.f1_fc.value())
        foflet1.set_k1(self.f1_k1.value()*.0001)
        foflet1.set_BW(self.f1_bw.value())

        foflet2.set_Fc(self.f2_fc.value())
        foflet2.set_k1(self.f2_k1.value()*.0001)
        foflet2.set_BW(self.f2_bw.value())

        foflet3.set_Fc(self.f3_fc.value())
        foflet3.set_k1(self.f3_k1.value()*.0001)
        foflet3.set_BW(self.f3_bw.value())

        foflet4.set_Fc(self.f4_fc.value())
        foflet4.set_k1(self.f4_k1.value()*.0001)
        foflet4.set_BW(self.f4_bw.value())

        foflet5.set_Fc(self.f5_fc.value())
        foflet5.set_k1(self.f5_k1.value()*.0001)
        foflet5.set_BW(self.f5_bw.value())

        # create FOFlets
        foflet1.update_FOFlet(Fs, self.Impulse_Slider.value())
        foflet2.update_FOFlet(Fs, self.Impulse_Slider.value())
        foflet3.update_FOFlet(Fs, self.Impulse_Slider.value())
        foflet4.update_FOFlet(Fs, self.Impulse_Slider.value())
        foflet5.update_FOFlet(Fs, self.Impulse_Slider.value())

        self.infoBox.clear()
        self.infoBox.insertPlainText(foflet_str(foflet1, foflet2, foflet3, foflet4, foflet5))
        #self.infoBox.moveCursor(QtGui.QTextCursor.End)



#############################################
# this will be main.
#############################################
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('qt5ct-style')
    window = Ui()
    app.exec_()
